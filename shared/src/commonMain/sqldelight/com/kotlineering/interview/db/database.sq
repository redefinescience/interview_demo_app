CREATE TABLE Todos(
    id INTEGER NOT NULL PRIMARY KEY,
    userId INTEGER NOT NULL,
    title TEXT NOT NULL,
    completed INTEGER NOT NULL,
    sequence INTEGER NOT NULL
);

upsertTodo:
    INSERT OR REPLACE INTO Todos(
        id, userId, title, completed, sequence
    ) VALUES (?, ?, ?, ?, ?);

getTodos:
    SELECT * FROM Todos
        WHERE Todos.userId = ?
        AND Todos.completed <= ?
        ORDER BY Todos.sequence;

getLowestTodoSequence:
    SELECT sequence FROM Todos
    ORDER BY Todos.sequence
        LIMIT 1;

getGreatestTodoId:
    SELECT id FROM Todos
    ORDER BY Todos.id DESC
        LIMIT 1;

clearTodos:
    DELETE FROM Todos
        WHERE Todos.userId = ?;

CREATE TABLE Portfolio(
    name TEXT NOT NULL PRIMARY KEY,
    size INTEGER NOT NULL,
    update_timestamp INTEGER NOT NULL
);

CREATE TABLE Stocks(
    ticker TEXT NOT NULL PRIMARY KEY,
    name TEXT NOT NULL,
    currency TEXT NOT NULL,
    current_price_cents INTEGER NOT NULL,
    quantity INTEGER NOT NULL,
    current_price_timestamp INTEGER NOT NULL,
    update_timestamp INTEGER NOT NULL
);

CREATE TABLE PortfolioStocks(
    name TEXT NOT NULL,
    ticker TEXT NOT NULL,
    sequence INTEGER NOT NULL,
    PRIMARY KEY(name, ticker),
    FOREIGN KEY(name) REFERENCES Portfolio(name)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    FOREIGN KEY(ticker) REFERENCES Stocks(ticker)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

upsertStock:
    INSERT OR REPLACE INTO Stocks(
        ticker,
        name,
        currency,
        current_price_cents,
        quantity,
        current_price_timestamp,
        update_timestamp
    ) VALUES (
        ?, ?, ?, ?, ?, ?, ?
    );

upsertPortfolio:
    INSERT OR REPLACE INTO Portfolio(
        name,
        size,
        update_timestamp
    ) VALUES (
        ?, ?, ?
    );

getStocks:
    SELECT * FROM Stocks
        INNER JOIN PortfolioStocks
            ON Stocks.ticker = PortfolioStocks.ticker
        WHERE PortfolioStocks.name = ?
        ORDER BY PortfolioStocks.sequence;

clearPortfolioStocks:
    DELETE FROM PortfolioStocks WHERE name = ?;

upsertPortfolioStock:
    INSERT OR REPLACE INTO PortfolioStocks(
        name,
        ticker,
        sequence
    ) VALUES (
        ?, ?, ?
    );
